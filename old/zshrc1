
export PATHBAK=$PATH

export GOPATH=$HOME/go
# export GOROOT=/usr/local/go
export GOBIN=$GOPATH/bin
export PATH=$PATH:$GOPATH
export PATH=$PATH:$GOPATH/bin

export EDITOR='nvim'
export SUDO_EDITOR='nvim'

export NAP_CONFIG="$HOME/.config/nap/nap.conf"
export NAP_HOME="$HOME/Repos/snippets"
export NAP_DEFAULT_LANGUAGE="rs"
export NAP_THEME="nord"

# In case a command is not found, try to find the package that has it
function command_not_found_handlerOFF {
    local purple='\e[1;35m' bright='\e[0;1m' green='\e[1;32m' reset='\e[0m'
    printf 'zsh: command not found: %s\n' "$1"
    local entries=( ${(f)"$(/usr/bin/pacman -F --machinereadable -- "/usr/bin/$1")"} )
    if (( ${#entries[@]} )) ; then
        printf "${bright}$1${reset} may be found in the following packages:\n"
        local pkg
        for entry in "${entries[@]}" ; do
            local fields=( ${(0)entry} )
            if [[ "$pkg" != "${fields[2]}" ]] ; then
                printf "${purple}%s/${bright}%s ${green}%s${reset}\n" "${fields[1]}" "${fields[2]}" "${fields[3]}"
            fi
            printf '    /%s\n' "${fields[4]}"
            pkg="${fields[2]}"
        done
    fi
    return 127
}

# Detect the AUR wrapper
if pacman -Qi yay &>/dev/null ; then
   aurhelper="yay"
elif pacman -Qi paru &>/dev/null ; then
   aurhelper="paru"
fi

function in {
    local pkg="$1"
    if pacman -Si "$pkg" &>/dev/null ; then
        sudo pacman -S "$pkg"
    else 
        "$aurhelper" -S "$pkg"
    fi
}

# fvim -> find and open a file in vim
function fvim() {
    if [[ $# -eq 0 ]]; then
        fd -t f | fzf --header "Open File in Vim" --preview "cat {}" | xargs nvim
    else
        fd -t f | fzf --header "Open File in Vim" --preview "cat {}" -q "$@" | xargs nvim
    fi
}

# vim -> open vim in the current directory or open the target file
function vim() {
    if [[ $# -eq 0 ]]; then
        nvim .
    else
        nvim "$@"
    fi
}

alias connect='kitten ssh noah@mondkuchen.tech'
alias hmm='h-m-m'
alias hx='helix'
alias task='pueue'

mcdir() {
    mkdir -p "$1" && cd "$1"
}

alias l='exa --icons=auto --oneline --color=always --group-directories-first'

# List
# basic list
alias  l='eza --oneline --icons=auto --color=always --group-directories-first'
# grid list
alias ls='eza --icons=auto --color=always --group-directories-first'
# list all
alias la='eza -a --oneline --icons=auto --color=always --group-directories-first'
# long list
alias ll='eza -lh  --sort=name --icons=auto --color=always --group-directories-first'
# long list all
alias lla='eza -lha  --sort=name --icons=auto --color=always --group-directories-first'

alias lt='eza --tree --level=2 --icons=auto --color=always'
alias ld='eza -lD --icons=auto --oneline --color=always'
alias lf='eza -lf --icons=auto --oneline --color=always'


alias un='$aurhelper -Rns' # uninstall package
alias up='$aurhelper -Syu' # update system/package/aur
alias pl='$aurhelper -Qs' # list installed package
alias pa='$aurhelper -Ss' # list availabe package
alias pc='$aurhelper -Sc' # remove unused cache
alias po='$aurhelper -Qtdq | $aurhelper -Rns -' # remove unused packages, also try > $aurhelper -Qqd | $aurhelper -Rsu --print -

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

#Display Pokemon
# pokemon-colorscripts --no-title -r 1,3,6

source /home/noah/.config/broot/launcher/bash/br

# Following line was automatically added by arttime installer
export PATH=/home/noah/.local/bin:$PATH

eval "$(starship init zsh)"
